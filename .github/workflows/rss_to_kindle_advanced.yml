name: RSS to Kindle (Advanced)

on:
  schedule:
    # 每天北京时间早上7点和晚上7点运行
    - cron: '0 23 * * *'  # 早上7点
    - cron: '0 11 * * *'  # 晚上7点
  workflow_dispatch:
    inputs:
      send_email:
        description: '是否发送邮件到Kindle'
        required: false
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'
      save_release:
        description: '是否保存到Release'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'

env:
  TZ: 'Asia/Shanghai'

jobs:
  convert-and-send:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set timezone and date
      id: date
      run: |
        sudo timedatectl set-timezone Asia/Shanghai
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "datetime=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_OUTPUT
        echo "month=$(date +'%Y-%m')" >> $GITHUB_OUTPUT
    
    - name: Generate EPUB
      env:
        # RSS配置 - 使用Repository Variable或Secret
        CONFIG_YAML: ${{ vars.CONFIG_YAML || secrets.CONFIG_YAML }}
      run: |
        python main.py
        echo "Generated EPUB files:"
        ls -lh rss_feed_*.epub
    
    - name: Get EPUB filename
      id: epub
      run: |
        EPUB_FILE=$(ls -t rss_feed_*.epub | head -1)
        echo "filename=$EPUB_FILE" >> $GITHUB_OUTPUT
        echo "Found EPUB: $EPUB_FILE"
    
    - name: Send to Kindle
      if: github.event.inputs.send_email != 'false'
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        KINDLE_EMAIL: ${{ secrets.KINDLE_EMAIL }}
        EMAIL_SUBJECT: "RSS Feed - ${{ steps.date.outputs.date }}"
        EMAIL_BODY: "您订阅的RSS内容 - ${{ steps.date.outputs.datetime }}"
      run: |
        if [ -n "$KINDLE_EMAIL" ]; then
          python send_to_kindle.py
        else
          echo "⚠️ KINDLE_EMAIL not configured, skipping email"
        fi
    
    - name: Upload EPUB as artifact
      uses: actions/upload-artifact@v4
      with:
        name: rss-epub-${{ steps.date.outputs.datetime }}
        path: ${{ steps.epub.outputs.filename }}
        retention-days: 30
    
    - name: Create Release
      if: github.event.inputs.save_release == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: epub-${{ steps.date.outputs.datetime }}
        name: RSS EPUB - ${{ steps.date.outputs.date }}
        body: |
          RSS 订阅电子书
          生成时间：${{ steps.date.outputs.datetime }}
        files: ${{ steps.epub.outputs.filename }}
        draft: false
        prerelease: false
    
    - name: Clean up old artifacts
      run: |
        # 保留最新的5个EPUB文件
        ls -t rss_feed_*.epub 2>/dev/null | tail -n +6 | xargs -r rm -f
    
    - name: Summary
      run: |
        echo "## 📚 RSS to EPUB Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: ${{ steps.date.outputs.date }}" >> $GITHUB_STEP_SUMMARY
        echo "- **File**: ${{ steps.epub.outputs.filename }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Email Sent**: ${{ github.event.inputs.send_email != 'false' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Created**: ${{ github.event.inputs.save_release == 'true' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY